{
  "report_metadata": {
    "timestamp": "2025-10-17T00:00:00.000Z",
    "project_root": ".",
    "language": "typescript",
    "config_file": "observe-config.json",
    "execution_time_ms": 0
  },
  "summary": {
    "total_contracts_analyzed": 4,
    "total_endpoints_verified": 4,
    "fully_compliant_endpoints": 0,
    "partial_compliance_endpoints": 4,
    "non_compliant_endpoints": 0,
    "overall_compliance_score": 66.67,
    "violations_by_severity": {
      "CRITICAL": 1,
      "HIGH": 3,
      "MEDIUM": 2,
      "LOW": 0
    }
  },
  "contracts": [
    {
      "contract_id": "order_creation",
      "contract_name": "Order Creation Flow",
      "enabled": true,
      "endpoints_verified": ["POST /api/orders"],
      "compliance_score": 66.67,
      "violations_count": 2
    },
    {
      "contract_id": "order_fulfillment",
      "contract_name": "Order Fulfillment Flow",
      "enabled": true,
      "endpoints_verified": ["POST /api/orders/:id/fulfill"],
      "compliance_score": 66.67,
      "violations_count": 2
    },
    {
      "contract_id": "user_creation",
      "contract_name": "User Registration Flow",
      "enabled": true,
      "endpoints_verified": ["POST /api/users"],
      "compliance_score": 66.67,
      "violations_count": 2
    },
    {
      "contract_id": "product_management",
      "contract_name": "Product Creation Flow",
      "enabled": true,
      "endpoints_verified": ["POST /api/products"],
      "compliance_score": 66.67,
      "violations_count": 2
    }
  ],
  "violations": [
    {
      "violation_id": "order_creation_controller_tracing_1739731200000",
      "severity": "CRITICAL",
      "contract_id": "order_creation",
      "contract_name": "Order Creation Flow",
      "endpoint": "POST /api/orders",
      "layer": "controller",
      "file_pattern": "orders",
      "signal_type": "tracing",
      "file": "agents/logauditor/example-project/src/api/orders.ts",
      "line": 1,
      "issue": "Missing tracing in controller layer",
      "recommendation": "Add OpenTelemetry tracer.startSpan() and propagate context"
    },
    {
      "violation_id": "order_creation_service_tracing_1739731200000",
      "severity": "HIGH",
      "contract_id": "order_creation",
      "contract_name": "Order Creation Flow",
      "endpoint": "POST /api/orders",
      "layer": "service",
      "file_pattern": "order-service",
      "signal_type": "tracing",
      "file": "agents/logauditor/example-project/src/services/order-service.ts",
      "line": 1,
      "issue": "Missing tracing in service layer",
      "recommendation": "Add OpenTelemetry spans around DB calls and business logic"
    },
    {
      "violation_id": "order_creation_database_error_handling_1739731200000",
      "severity": "MEDIUM",
      "contract_id": "order_creation",
      "contract_name": "Order Creation Flow",
      "endpoint": "POST /api/orders",
      "layer": "database",
      "file_pattern": "repository",
      "signal_type": "error_handling",
      "file": "agents/logauditor/example-project/src/db/repository.ts",
      "line": 1,
      "issue": "Missing error logging in database layer catch blocks",
      "recommendation": "Wrap DB operations in try/catch with logger.error and rethrow"
    },
    {
      "violation_id": "order_fulfillment_controller_tracing_1739731200000",
      "severity": "CRITICAL",
      "contract_id": "order_fulfillment",
      "contract_name": "Order Fulfillment Flow",
      "endpoint": "POST /api/orders/:id/fulfill",
      "layer": "controller",
      "file_pattern": "orders",
      "signal_type": "tracing",
      "file": "agents/logauditor/example-project/src/api/orders.ts",
      "line": 100,
      "issue": "Missing tracing in controller layer",
      "recommendation": "Add OpenTelemetry tracer.startSpan() and propagate context"
    },
    {
      "violation_id": "order_fulfillment_service_tracing_1739731200000",
      "severity": "HIGH",
      "contract_id": "order_fulfillment",
      "contract_name": "Order Fulfillment Flow",
      "endpoint": "POST /api/orders/:id/fulfill",
      "layer": "service",
      "file_pattern": "order-service",
      "signal_type": "tracing",
      "file": "agents/logauditor/example-project/src/services/order-service.ts",
      "line": 150,
      "issue": "Missing tracing in service layer",
      "recommendation": "Add OpenTelemetry spans around DB calls and business logic"
    },
    {
      "violation_id": "product_management_controller_tracing_1739731200000",
      "severity": "CRITICAL",
      "contract_id": "product_management",
      "contract_name": "Product Creation Flow",
      "endpoint": "POST /api/products",
      "layer": "controller",
      "file_pattern": "products",
      "signal_type": "tracing",
      "file": "agents/logauditor/example-project/src/api/products.ts",
      "line": 1,
      "issue": "Missing tracing in controller layer",
      "recommendation": "Add OpenTelemetry tracer.startSpan() and propagate context"
    }
  ],
  "recommendations": [
    {
      "priority": 1,
      "type": "observability_gap",
      "target": "controllers",
      "recommendation": "Add tracing spans at the start of each controller handler; inject span context into service calls",
      "impact": "Enables end-to-end distributed tracing for debugging and latency analysis"
    },
    {
      "priority": 2,
      "type": "observability_gap",
      "target": "services",
      "recommendation": "Instrument service functions with tracing and propagate errors with context",
      "impact": "Improves visibility into business logic and downstream dependencies"
    },
    {
      "priority": 3,
      "type": "observability_gap",
      "target": "services",
      "recommendation": "Adopt OpenTelemetry SDK with auto-instrumentation for Express and pg",
      "impact": "Quickly gains spans for HTTP and database without heavy code changes"
    },
    {
      "priority": 4,
      "type": "observability_gap",
      "target": "database",
      "recommendation": "Log DB errors in repository catch blocks; add metrics for query timings",
      "impact": "Detects failures and slow queries early"
    }
  ],
  "success": true
}